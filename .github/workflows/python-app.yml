name: Django CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: carrito_db
          MYSQL_USER: usuario_carrito
          MYSQL_PASSWORD: contrasena_carrito
        ports:
          - 3306:3306
        volumes:
          - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u usuario_carrito -pcontrasena_carrito"
          --health-interval=20s
          --health-timeout=5s
          --health-retries=5
          --health-start-period=30s

    steps:

    - name: Verify init.sql in container
      run: |
        docker exec $(docker ps -q --filter "ancestor=mariadb:10.5") ls -l /docker-entrypoint-initdb.d/

    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y default-mysql-client
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Get MariaDB IP
      id: get-db-ip
      run: |
        DB_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -q --filter 'ancestor=mariadb:10.5'))
        echo "DB_IP=$DB_IP" >> $GITHUB_ENV
        echo "IP del contenedor MariaDB: $DB_IP"

    - name: Wait for DB to be ready
      run: |
        for i in {1..20}; do
          if mysql -h127.0.0.1 -uusuario_carrito -pcontrasena_carrito -e "SELECT 1;" &>/dev/null; then
            echo "Database is ready!";
            break;
          fi
          echo "Waiting for the database... (Attempt $i of 20)";
          sleep 5;
        done

    - name: Create test database
      run: |
        mysql -h127.0.0.1 -uusuario_carrito -pcontrasena_carrito -e "DROP DATABASE IF EXISTS test_carrito_db;"
        mysql -h127.0.0.1 -uusuario_carrito -pcontrasena_carrito -e "CREATE DATABASE IF NOT EXISTS test_carrito_db;"
        mysql -h127.0.0.1 -uusuario_carrito -pcontrasena_carrito -e "GRANT ALL PRIVILEGES ON test_carrito_db.* TO 'usuario_carrito'@'%';"
        mysql -h127.0.0.1 -uusuario_carrito -pcontrasena_carrito -e "FLUSH PRIVILEGES;"

    - name: Test database connection
      run: |
        mysql -h127.0.0.1 -uusuario_carrito -pcontrasena_carrito -e "SHOW DATABASES;"
        mysql -h127.0.0.1 -uusuario_carrito -pcontrasena_carrito -e "SHOW GRANTS FOR 'usuario_carrito'@'%';"

    - name: Verify init.sql in container
      run: |
        docker exec $(docker ps -q --filter "ancestor=mariadb:10.5") ls -l /docker-entrypoint-initdb.d/

    - name: Print MariaDB logs
      run: |
        docker logs $(docker ps -q --filter "ancestor=mariadb:10.5") || echo "No logs available"

    - name: Run migrations
      env:
        DB_HOST: 127.0.0.1
      run: |
        python manage.py makemigrations
        python manage.py migrate

    - name: Run tests
      env:
        DB_HOST: 127.0.0.1
      run: |
        python manage.py test